A function f is deﬁned by the rule that f (n) = n if n < 3 and f (n) = f(n - 1) + 2f(n - 2) + 3f(n - 3) if n >= 3. Write a
procedure that computes f by means of a recursive process. Write a procedure that computes f by means of an iterative process.

recursive:

(defn f [n]
  (if (< n 3)
    n
    (+ (f (dec n)) (* 2 (f (- n 2))) (* 3 (f (- n 3))))))

iterative:

(defn f [n]
  (if (< n 3)
    n
    (loop [count 2 a 2 b 1 c 0]
      (if (= count n)
        a
        (recur (inc count) (+ a (* 2 b) (* 3 c)) a b)))))
