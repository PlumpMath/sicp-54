We saw in Section 1.3.3 that attempting to compute square roots by naively
ﬁnding a ﬁxed point of y -> x/y does not converge, and that this can be ﬁxed 
by average damping. The same method works for ﬁnding cube roots as ﬁxed points
of the average damped y -> x/y^2. Unfortunately, the process does not work for
fourth roots—a single average damp is not enough to make a ﬁxedpoint search for
y -> x/y^3 converge. On the other hand, if we average damp twice (i.e., use the
average damp of the average damp of y -> x/y^3) the ﬁxed-point search does 
converge. Do some experiments to determine how many average damps are required 
to compute nth roots as a ﬁxed-point search based upon repeated average damping 
of y -> x/y^n-1. Use this to implement a simple procedure for computing nth 
roots using fixed-point, average-damp, and the repeated procedure of Exercise 
1.43. Assume that any arithmetic operations you need are available as primitives.

(defn average [a b]
  (/ (+ a b) 2))

(defn average-damp [f]
  #(average % (f %)))

(defn nth-average-damp [f n]
  (repeated (average-damp f) n))

(defn potenciation [x n]
  ((repeated #(* % x) (dec n)) x))

(defn nth-root [x n]
  (fixed-point ((repeated average-damp (dec n)) #(/ x (potenciation % (dec n)))) 1))
