The sum procedure above generates a linear recursion. The procedure can be rewritten so that the sum is performed iteratively.
Show how to do this by ﬁlling in the missing expressions in the following deﬁnition:

(defn sum [term a next b]
  (letfn [(iter [a result]
            (if (> a b)
              result
              (recur (next a) (+ result (term a)))))]
    (iter a 0)))
